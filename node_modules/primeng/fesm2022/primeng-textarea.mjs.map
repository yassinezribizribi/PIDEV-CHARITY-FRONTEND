{"version":3,"file":"primeng-textarea.mjs","sources":["../../src/textarea/style/textareastyle.ts","../../src/textarea/textarea.ts","../../src/textarea/primeng-textarea.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-textarea {\n    font-family: inherit;\n    font-feature-settings: inherit;\n    font-size: 1rem;\n    color: ${dt('textarea.color')};\n    background: ${dt('textarea.background')};\n    padding: ${dt('textarea.padding.y')} ${dt('textarea.padding.x')};\n    border: 1px solid ${dt('textarea.border.color')};\n    transition: background ${dt('textarea.transition.duration')}, color ${dt('textarea.transition.duration')}, border-color ${dt('textarea.transition.duration')}, outline-color ${dt('textarea.transition.duration')}, box-shadow ${dt(\n        'textarea.transition.duration'\n    )};\n    appearance: none;\n    border-radius: ${dt('textarea.border.radius')};\n    outline-color: transparent;\n    box-shadow: ${dt('textarea.shadow')};\n}\n\n.p-textarea.ng-invalid.ng-dirty {\n    border-color: ${dt('textarea.invalid.border.color')};\n}\n\n.p-textarea:enabled:hover {\n    border-color: ${dt('textarea.hover.border.color')};\n}\n\n.p-textarea:enabled:focus {\n    border-color: ${dt('textarea.focus.border.color')};\n    box-shadow: ${dt('textarea.focus.ring.shadow')};\n    outline: ${dt('textarea.focus.ring.width')} ${dt('textarea.focus.ring.style')} ${dt('textarea.focus.ring.color')};\n    outline-offset: ${dt('textarea.focus.ring.offset')};\n}\n\n.p-textarea.p-invalid {\n    border-color: ${dt('textarea.invalid.border.color')};\n}\n\n.p-textarea.p-variant-filled {\n    background: ${dt('textarea.filled.background')};\n}\n\n.p-textarea.p-variant-filled:enabled:focus {\n    background: ${dt('textarea.filled.focus.background')};\n}\n\n.p-textarea:disabled {\n    opacity: 1;\n    background: ${dt('textarea.disabled.background')};\n    color: ${dt('textarea.disabled.color')};\n}\n\n.p-textarea::placeholder {\n    color: ${dt('textarea.placeholder.color')};\n}\n\n.p-textarea.ng-invalid.ng-dirty::placeholder {\n    color: ${dt('textarea.invalid.placeholder.color')};\n}\n\n.p-textarea-fluid {\n    width: 100%;\n}\n\n.p-textarea-resizable {\n    overflow: hidden;\n    resize: none;\n}\n\n.p-textarea-sm {\n    font-size: ${dt('textarea.sm.font.size')};\n    padding-block: ${dt('textarea.sm.padding.y')};\n    padding-inline: ${dt('textarea.sm.padding.x')};\n}\n\n.p-textarea-lg {\n    font-size: ${dt('textarea.lg.font.size')};\n    padding-block: ${dt('textarea.lg.padding.y')};\n    padding-inline: ${dt('textarea.lg.padding.x')};\n}\n`;\n\nconst classes = {\n    root: ({ instance, props }) => [\n        'p-textarea p-component',\n        {\n            'p-filled': instance.filled,\n            'p-textarea-resizable ': props.autoResize,\n            'p-invalid': props.invalid,\n            'p-variant-filled': props.variant ? props.variant === 'filled' : instance.config.inputStyle === 'filled' || instance.config.inputVariant === 'filled',\n            'p-textarea-fluid': props.fluid\n        }\n    ]\n};\n\n@Injectable()\nexport class TextareaStyle extends BaseStyle {\n    name = 'textarea';\n\n    theme = theme;\n\n    classes = classes;\n}\n\n/**\n *\n * Textarea is a multi-line text input element.\n *\n * [Live Demo](https://www.primeng.org/textarea/)\n *\n * @module textareastyle\n *\n */\nexport enum TextareaClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-textarea'\n}\n\nexport interface TextareaStyle extends BaseStyle {}\n","import { AfterViewInit, booleanAttribute, Directive, EventEmitter, HostListener, inject, Input, NgModule, OnDestroy, OnInit, Optional, Output } from '@angular/core';\nimport { NgControl, NgModel } from '@angular/forms';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { Subscription } from 'rxjs';\nimport { TextareaStyle } from './style/textareastyle';\n\n/**\n * Textarea adds styling and autoResize functionality to standard textarea element.\n * @group Components\n */\n@Directive({\n    selector: '[pTextarea]',\n    standalone: true,\n    host: {\n        class: 'p-textarea p-component',\n        '[class.p-filled]': 'filled',\n        '[class.p-textarea-resizable]': 'autoResize',\n        '[class.p-variant-filled]': 'variant === \"filled\" || config.inputStyle() === \"filled\" || config.inputVariant() === \"filled\"',\n        '[class.p-textarea-fluid]': 'hasFluid',\n        '[class.p-textarea-sm]': 'pSize === \"small\"',\n        '[class.p-inputfield-sm]': 'pSize === \"small\"',\n        '[class.p-textarea-lg]': 'pSize === \"large\"',\n        '[class.p-inputfield-lg]': 'pSize === \"large\"'\n    },\n    providers: [TextareaStyle]\n})\nexport class Textarea extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * When present, textarea size changes as being typed.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) autoResize: boolean | undefined;\n    /**\n     * Specifies the input variant of the component.\n     * @group Props\n     */\n    @Input() variant: 'filled' | 'outlined';\n    /**\n     * Spans 100% width of the container when enabled.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) fluid: boolean = false;\n    /**\n     * Defines the size of the component.\n     * @group Props\n     */\n    @Input() pSize: 'large' | 'small';\n    /**\n     * Callback to invoke on textarea resize.\n     * @param {(Event | {})} event - Custom resize event.\n     * @group Emits\n     */\n    @Output() onResize: EventEmitter<Event | {}> = new EventEmitter<Event | {}>();\n\n    filled: boolean | undefined;\n\n    cachedScrollHeight: number | undefined;\n\n    ngModelSubscription: Subscription | undefined;\n\n    ngControlSubscription: Subscription | undefined;\n\n    _componentStyle = inject(TextareaStyle);\n\n    constructor(\n        @Optional() public ngModel: NgModel,\n        @Optional() public control: NgControl\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        if (this.ngModel) {\n            this.ngModelSubscription = (this.ngModel as any).valueChanges.subscribe(() => {\n                this.updateState();\n            });\n        }\n\n        if (this.control) {\n            this.ngControlSubscription = (this.control as any).valueChanges.subscribe(() => {\n                this.updateState();\n            });\n        }\n    }\n\n    get hasFluid() {\n        const nativeElement = this.el.nativeElement;\n        const fluidComponent = nativeElement.closest('p-fluid');\n        return this.fluid || !!fluidComponent;\n    }\n\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        if (this.autoResize) this.resize();\n\n        this.updateFilledState();\n        this.cd.detectChanges();\n    }\n\n    @HostListener('input', ['$event'])\n    onInput(e: Event) {\n        this.updateState();\n    }\n\n    updateFilledState() {\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n    }\n\n    resize(event?: Event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = 'scroll';\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        } else {\n            this.el.nativeElement.style.overflow = 'hidden';\n        }\n\n        this.onResize.emit(event || {});\n    }\n\n    updateState() {\n        this.updateFilledState();\n\n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.ngModelSubscription) {\n            this.ngModelSubscription.unsubscribe();\n        }\n\n        if (this.ngControlSubscription) {\n            this.ngControlSubscription.unsubscribe();\n        }\n\n        super.ngOnDestroy();\n    }\n}\n\n@NgModule({\n    imports: [Textarea],\n    exports: [Textarea]\n})\nexport class TextareaModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}