{"version":3,"file":"primeng-avatar.mjs","sources":["../../src/avatar/style/avatarstyle.ts","../../src/avatar/avatar.ts","../../src/avatar/primeng-avatar.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-avatar {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    width: ${dt('avatar.width')};\n    height: ${dt('avatar.height')};\n    font-size: ${dt('avatar.font.size')};\n    color: ${dt('avatar.color')};\n    background: ${dt('avatar.background')};\n    border-radius: ${dt('avatar.border.radius')};\n}\n\n.p-avatar-image {\n    background: transparent;\n}\n\n.p-avatar-circle {\n    border-radius: 50%;\n}\n\n.p-avatar-circle img {\n    border-radius: 50%;\n}\n\n.p-avatar-icon {\n    font-size: ${dt('avatar.icon.size')};\n    width: ${dt('avatar.icon.size')};\n    height: ${dt('avatar.icon.size')};\n}\n\n.p-avatar img {\n    width: 100%;\n    height: 100%;\n}\n\n.p-avatar-lg {\n    width: ${dt('avatar.lg.width')};\n    height: ${dt('avatar.lg.width')};\n    font-size: ${dt('avatar.lg.font.size')};\n}\n\n.p-avatar-lg .p-avatar-icon {\n    font-size: ${dt('avatar.lg.icon.size')};\n    width: ${dt('avatar.lg.icon.size')};\n    height: ${dt('avatar.lg.icon.size')};\n}\n\n.p-avatar-xl {\n    width: ${dt('avatar.xl.width')};\n    height: ${dt('avatar.xl.width')};\n    font-size: ${dt('avatar.xl.font.size')};\n}\n\n.p-avatar-xl .p-avatar-icon {\n    font-size: ${dt('avatar.xl.font.size')};\n    width: ${dt('avatar.xl.icon.size')};\n    height: ${dt('avatar.xl.icon.size')};\n}\n\n.p-avatar-group {\n    display: flex;\n    align-items: center;\n}\n\n.p-avatar-group .p-avatar + .p-avatar {\n    margin-inline-start: ${dt('avatar.group.offset')};\n}\n\n.p-avatar-group .p-avatar {\n    border: 2px solid ${dt('avatar.group.border.color')};\n}\n\n.p-avatar-group .p-avatar-lg + .p-avatar-lg {\n    margin-inline-start: ${dt('avatar.lg.group.offset')};\n}\n\n.p-avatar-group .p-avatar-xl + .p-avatar-xl {\n    margin-inline-start: ${dt('avatar.xl.group.offset')};\n}\n`;\n\nconst classes = {\n    root: ({ props }) => [\n        'p-avatar p-component',\n        {\n            'p-avatar-image': props.image != null,\n            'p-avatar-circle': props.shape === 'circle',\n            'p-avatar-lg': props.size === 'large',\n            'p-avatar-xl': props.size === 'xlarge'\n        }\n    ],\n    label: 'p-avatar-label',\n    icon: 'p-avatar-icon'\n};\n\n@Injectable()\nexport class AvatarStyle extends BaseStyle {\n    name = 'avatar';\n\n    theme = theme;\n\n    classes = classes;\n}\n\n/**\n *\n * Avatar represents people using icons, labels and images.\n *\n * - [Live Demo](https://primeng.org/avatar)\n *\n * @module avatarstyle\n *\n */\nexport enum AvatarClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-avatar',\n    /**\n     * Class name of the label element\n     */\n    label = 'p-avatar-label',\n    /**\n     * Class name of the icon element\n     */\n    icon = 'p-avatar-icon'\n}\n\nexport interface AvatarStyle extends BaseStyle {}\n","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, inject, Input, NgModule, Output, ViewEncapsulation } from '@angular/core';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { AvatarStyle } from './style/avatarstyle';\n\n/**\n * Avatar represents people using icons, labels and images.\n * @group Components\n */\n@Component({\n    selector: 'p-avatar',\n    standalone: true,\n    imports: [CommonModule, SharedModule],\n    template: `\n        <ng-content></ng-content>\n        <span class=\"p-avatar-text\" *ngIf=\"label; else iconTemplate\">{{ label }}</span>\n        <ng-template #iconTemplate><span [class]=\"icon\" [ngClass]=\"'p-avatar-icon'\" *ngIf=\"icon; else imageTemplate\"></span></ng-template>\n        <ng-template #imageTemplate> <img [src]=\"image\" *ngIf=\"image\" (error)=\"imageError($event)\" [attr.aria-label]=\"ariaLabel\" /></ng-template>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[class.p-avatar]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-avatar-circle]': 'shape === \"circle\"',\n        '[class.p-avatar-lg]': 'size === \"large\"',\n        '[class.p-avatar-xl]': 'size === \"xlarge\"',\n        '[class.p-avatar-image]': 'image != null',\n        '[attr.data-pc-name]': '\"avatar\"',\n        '[attr.aria-label]': 'ariaLabel',\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[style]': 'style'\n    },\n    providers: [AvatarStyle]\n})\nexport class Avatar extends BaseComponent {\n    /**\n     * Defines the text to display.\n     * @group Props\n     */\n    @Input() label: string | undefined;\n    /**\n     * Defines the icon to display.\n     * @group Props\n     */\n    @Input() icon: string | undefined;\n    /**\n     * Defines the image to display.\n     * @group Props\n     */\n    @Input() image: string | undefined;\n    /**\n     * Size of the element.\n     * @group Props\n     */\n    @Input() size: 'normal' | 'large' | 'xlarge' | undefined = 'normal';\n    /**\n     * Shape of the element.\n     * @group Props\n     */\n    @Input() shape: 'square' | 'circle' | undefined = 'square';\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    @Input() style: { [klass: string]: any } | null | undefined;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    @Input() styleClass: string | undefined;\n    /**\n     * Establishes a string value that labels the component.\n     * @group Props\n     */\n    @Input() ariaLabel: string | undefined;\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    @Input() ariaLabelledBy: string | undefined;\n    /**\n     * This event is triggered if an error occurs while loading an image file.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    @Output() onImageError: EventEmitter<Event> = new EventEmitter<Event>();\n\n    _componentStyle = inject(AvatarStyle);\n\n    imageError(event: Event) {\n        this.onImageError.emit(event);\n    }\n\n    @HostBinding('class') get hostClass(): any {\n        return this.styleClass;\n    }\n}\n\n@NgModule({\n    imports: [Avatar, SharedModule],\n    exports: [Avatar, SharedModule]\n})\nexport class AvatarModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}