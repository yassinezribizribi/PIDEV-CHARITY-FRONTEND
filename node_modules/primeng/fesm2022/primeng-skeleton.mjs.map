{"version":3,"file":"primeng-skeleton.mjs","sources":["../../src/skeleton/style/skeletonstyle.ts","../../src/skeleton/skeleton.ts","../../src/skeleton/primeng-skeleton.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-skeleton {\n    overflow: hidden;\n    background: ${dt('skeleton.background')};\n    border-radius: ${dt('skeleton.border.radius')};\n}\n\n.p-skeleton::after {\n    content: \"\";\n    animation: p-skeleton-animation 1.2s infinite;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n    transform: translateX(-100%);\n    z-index: 1;\n    background: linear-gradient(90deg, rgba(255, 255, 255, 0), ${dt('skeleton.animation.background')}, rgba(255, 255, 255, 0));\n}\n\n[dir='rtl'] .p-skeleton::after {\n    animation-name: p-skeleton-animation-rtl;\n}\n\n.p-skeleton-circle {\n    border-radius: 50%;\n}\n\n.p-skeleton-animation-none::after {\n    animation: none;\n}\n\n@keyframes p-skeleton-animation {\n    from {\n        transform: translateX(-100%);\n    }\n    to {\n        transform: translateX(100%);\n    }\n}\n\n@keyframes p-skeleton-animation-rtl {\n    from {\n        transform: translateX(100%);\n    }\n    to {\n        transform: translateX(-100%);\n    }\n}\n`;\n\nconst inlineStyles = {\n    root: { position: 'relative' }\n};\n\nconst classes = {\n    root: ({ props }) => [\n        'p-skeleton p-component',\n        {\n            'p-skeleton-circle': props.shape === 'circle',\n            'p-skeleton-animation-none': props.animation === 'none'\n        }\n    ]\n};\n\n@Injectable()\nexport class SkeletonStyle extends BaseStyle {\n    name = 'skeleton';\n\n    theme = theme;\n\n    classes = classes;\n\n    inlineStyles = inlineStyles;\n}\n\n/**\n *\n * Skeleton is a placeholder to display instead of the actual content.\n *\n * [Live Demo](https://www.primeng.org/skeleton/)\n *\n * @module skeletonstyle\n *\n */\nexport enum SkeletonClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-skeleton'\n}\n\nexport interface SkeletonStyle extends BaseStyle {}\n","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject, Input, NgModule, ViewEncapsulation } from '@angular/core';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { SkeletonStyle } from './style/skeletonstyle';\n\n/**\n * Skeleton is a placeholder to display instead of the actual content.\n * @group Components\n */\n@Component({\n    selector: 'p-skeleton',\n    standalone: true,\n    imports: [CommonModule, SharedModule],\n    template: ` <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"containerStyle\" [attr.data-pc-name]=\"'skeleton'\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'root'\"></div> `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [SkeletonStyle]\n})\nexport class Skeleton extends BaseComponent {\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    @Input() styleClass: string | undefined;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    @Input() style: { [klass: string]: any } | null | undefined;\n    /**\n     * Shape of the element.\n     * @group Props\n     */\n    @Input() shape: string = 'rectangle';\n    /**\n     * Type of the animation.\n     * @gruop Props\n     */\n    @Input() animation: string = 'wave';\n    /**\n     * Border radius of the element, defaults to value from theme.\n     * @group Props\n     */\n    @Input() borderRadius: string | undefined;\n    /**\n     * Size of the skeleton.\n     * @group Props\n     */\n    @Input() size: string | undefined;\n    /**\n     * Width of the element.\n     * @group Props\n     */\n    @Input() width: string = '100%';\n    /**\n     * Height of the element.\n     * @group Props\n     */\n    @Input() height: string = '1rem';\n\n    _componentStyle = inject(SkeletonStyle);\n\n    containerClass() {\n        return {\n            'p-skeleton p-component': true,\n            'p-skeleton-circle': this.shape === 'circle',\n            'p-skeleton-animation-none': this.animation === 'none'\n        };\n    }\n\n    get containerStyle() {\n        const inlineStyles = this._componentStyle?.inlineStyles['root'];\n        let style;\n        if (this.size) style = { ...this.style, ...inlineStyles, width: this.size, height: this.size, borderRadius: this.borderRadius };\n        else style = { ...inlineStyles, width: this.width, height: this.height, borderRadius: this.borderRadius, ...this.style };\n\n        return style;\n    }\n}\n\n@NgModule({\n    imports: [Skeleton, SharedModule],\n    exports: [Skeleton, SharedModule]\n})\nexport class SkeletonModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}