{"version":3,"file":"primeng-inputtext.mjs","sources":["../../src/inputtext/style/inputtextstyle.ts","../../src/inputtext/inputtext.ts","../../src/inputtext/primeng-inputtext.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-inputtext {\n    font-family: inherit;\n    font-feature-settings: inherit;\n    font-size: 1rem;\n    color: ${dt('inputtext.color')};\n    background: ${dt('inputtext.background')};\n    padding-block: ${dt('inputtext.padding.y')};\n    padding-inline: ${dt('inputtext.padding.x')};\n    border: 1px solid ${dt('inputtext.border.color')};\n    transition: background ${dt('inputtext.transition.duration')}, color ${dt('inputtext.transition.duration')}, border-color ${dt('inputtext.transition.duration')}, outline-color ${dt('inputtext.transition.duration')}, box-shadow ${dt(\n        'inputtext.transition.duration'\n    )};\n    appearance: none;\n    border-radius: ${dt('inputtext.border.radius')};\n    outline-color: transparent;\n    box-shadow: ${dt('inputtext.shadow')};\n}\n\n.p-inputtext.ng-invalid.ng-dirty {\n    border-color: ${dt('inputtext.invalid.border.color')};\n}\n\n.p-inputtext:enabled:hover {\n    border-color: ${dt('inputtext.hover.border.color')};\n}\n\n.p-inputtext:enabled:focus {\n    border-color: ${dt('inputtext.focus.border.color')};\n    box-shadow: ${dt('inputtext.focus.ring.shadow')};\n    outline: ${dt('inputtext.focus.ring.width')} ${dt('inputtext.focus.ring.style')} ${dt('inputtext.focus.ring.color')};\n    outline-offset: ${dt('inputtext.focus.ring.offset')};\n}\n\n.p-inputtext.p-invalid {\n    border-color: ${dt('inputtext.invalid.border.color')};\n}\n\n.p-inputtext.p-variant-filled {\n    background: ${dt('inputtext.filled.background')};\n}\n    \n.p-inputtext.p-variant-filled:enabled:hover {\n    background: ${dt('inputtext.filled.hover.background')};\n}\n\n.p-inputtext.p-variant-filled:enabled:focus {\n    background: ${dt('inputtext.filled.focus.background')};\n}\n\n.p-inputtext:disabled {\n    opacity: 1;\n    background: ${dt('inputtext.disabled.background')};\n    color: ${dt('inputtext.disabled.color')};\n}\n\n.p-inputtext::placeholder {\n    color: ${dt('inputtext.placeholder.color')};\n}\n\n.p-inputtext.ng-invalid.ng-dirty::placeholder {\n    color: ${dt('inputtext.invalid.placeholder.color')};\n}\n\n.p-inputtext-sm {\n    font-size: ${dt('inputtext.sm.font.size')};\n    padding-block: ${dt('inputtext.sm.padding.y')};\n    padding-inline: ${dt('inputtext.sm.padding.x')};\n}\n\n.p-inputtext-lg {\n    font-size: ${dt('inputtext.lg.font.size')};\n    padding-block: ${dt('inputtext.lg.padding.y')};\n    padding-inline: ${dt('inputtext.lg.padding.x')};\n}\n\n.p-inputtext-fluid {\n    width: 100%;\n}\n`;\n\nconst classes = {\n    root: ({ instance, props }) => [\n        'p-inputtext p-component',\n        {\n            'p-filled': instance.filled,\n            'p-inputtext-sm': props.size === 'small',\n            'p-inputtext-lg': props.size === 'large',\n            'p-invalid': props.invalid,\n            'p-variant-filled': props.variant === 'filled',\n            'p-inputtext-fluid': props.fluid\n        }\n    ]\n};\n\n@Injectable()\nexport class InputTextStyle extends BaseStyle {\n    name = 'inputtext';\n\n    theme = theme;\n\n    classes = classes;\n}\n\n/**\n *\n * InputText renders a text field to enter data.\n *\n * [Live Demo](https://www.primeng.org/inputtext/)\n *\n * @module inputtextstyle\n *\n */\nexport enum InputTextClasses {\n    /**\n     * The class of root element\n     */\n    root = 'p-inputtext'\n}\n\nexport interface InputTextStyle extends BaseStyle {}\n","import { AfterViewInit, booleanAttribute, Directive, DoCheck, HostListener, inject, Input, NgModule, Optional } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { isEmpty } from '@primeuix/utils';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { Nullable } from 'primeng/ts-helpers';\nimport { InputTextStyle } from './style/inputtextstyle';\n\n/**\n * InputText directive is an extension to standard input element with theming.\n * @group Components\n */\n@Directive({\n    selector: '[pInputText]',\n    standalone: true,\n    host: {\n        class: 'p-inputtext p-component',\n        '[class.p-filled]': 'filled',\n        '[class.p-variant-filled]': '(variant ?? (config.inputStyle() || config.inputVariant())) === \"filled\"',\n        '[class.p-inputtext-fluid]': 'hasFluid',\n        '[class.p-inputtext-sm]': 'pSize === \"small\"',\n        '[class.p-inputfield-sm]': 'pSize === \"small\"',\n        '[class.p-inputtext-lg]': 'pSize === \"large\"',\n        '[class.p-inputfield-lg]': 'pSize === \"large\"'\n    },\n    providers: [InputTextStyle]\n})\nexport class InputText extends BaseComponent implements DoCheck, AfterViewInit {\n    /**\n     * Specifies the input variant of the component.\n     * @group Props\n     */\n    @Input() variant: 'filled' | 'outlined';\n    /**\n     * Spans 100% width of the container when enabled.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) fluid: boolean | undefined;\n    /**\n     * Defines the size of the component.\n     * @group Props\n     */\n    @Input('pSize') pSize: 'large' | 'small';\n\n    filled: Nullable<boolean>;\n\n    _componentStyle = inject(InputTextStyle);\n\n    get hasFluid() {\n        const nativeElement = this.el.nativeElement;\n        const fluidComponent = nativeElement.closest('p-fluid');\n\n        return isEmpty(this.fluid) ? !!fluidComponent : this.fluid;\n    }\n\n    constructor(@Optional() public ngModel: NgModel) {\n        super();\n    }\n\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.updateFilledState();\n        this.cd.detectChanges();\n    }\n\n    ngDoCheck() {\n        this.updateFilledState();\n    }\n\n    @HostListener('input', ['$event'])\n    onInput() {\n        this.updateFilledState();\n    }\n\n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    }\n}\n\n@NgModule({\n    imports: [InputText],\n    exports: [InputText]\n})\nexport class InputTextModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;AAGA,MAAM,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,KAAK;;;;;aAKb,EAAE,CAAC,iBAAiB,CAAC,CAAA;kBAChB,EAAE,CAAC,sBAAsB,CAAC,CAAA;qBACvB,EAAE,CAAC,qBAAqB,CAAC,CAAA;sBACxB,EAAE,CAAC,qBAAqB,CAAC,CAAA;wBACvB,EAAE,CAAC,wBAAwB,CAAC,CAAA;6BACvB,EAAE,CAAC,+BAA+B,CAAC,CAAA,QAAA,EAAW,EAAE,CAAC,+BAA+B,CAAC,CAAA,eAAA,EAAkB,EAAE,CAAC,+BAA+B,CAAC,CAAA,gBAAA,EAAmB,EAAE,CAAC,+BAA+B,CAAC,CAAgB,aAAA,EAAA,EAAE,CACnO,+BAA+B,CAClC,CAAA;;qBAEgB,EAAE,CAAC,yBAAyB,CAAC,CAAA;;kBAEhC,EAAE,CAAC,kBAAkB,CAAC,CAAA;;;;oBAIpB,EAAE,CAAC,gCAAgC,CAAC,CAAA;;;;oBAIpC,EAAE,CAAC,8BAA8B,CAAC,CAAA;;;;oBAIlC,EAAE,CAAC,8BAA8B,CAAC,CAAA;kBACpC,EAAE,CAAC,6BAA6B,CAAC,CAAA;AACpC,aAAA,EAAA,EAAE,CAAC,4BAA4B,CAAC,CAAA,CAAA,EAAI,EAAE,CAAC,4BAA4B,CAAC,CAAI,CAAA,EAAA,EAAE,CAAC,4BAA4B,CAAC,CAAA;sBACjG,EAAE,CAAC,6BAA6B,CAAC,CAAA;;;;oBAInC,EAAE,CAAC,gCAAgC,CAAC,CAAA;;;;kBAItC,EAAE,CAAC,6BAA6B,CAAC,CAAA;;;;kBAIjC,EAAE,CAAC,mCAAmC,CAAC,CAAA;;;;kBAIvC,EAAE,CAAC,mCAAmC,CAAC,CAAA;;;;;kBAKvC,EAAE,CAAC,+BAA+B,CAAC,CAAA;aACxC,EAAE,CAAC,0BAA0B,CAAC,CAAA;;;;aAI9B,EAAE,CAAC,6BAA6B,CAAC,CAAA;;;;aAIjC,EAAE,CAAC,qCAAqC,CAAC,CAAA;;;;iBAIrC,EAAE,CAAC,wBAAwB,CAAC,CAAA;qBACxB,EAAE,CAAC,wBAAwB,CAAC,CAAA;sBAC3B,EAAE,CAAC,wBAAwB,CAAC,CAAA;;;;iBAIjC,EAAE,CAAC,wBAAwB,CAAC,CAAA;qBACxB,EAAE,CAAC,wBAAwB,CAAC,CAAA;sBAC3B,EAAE,CAAC,wBAAwB,CAAC,CAAA;;;;;;CAMjD;AAED,MAAM,OAAO,GAAG;IACZ,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK;QAC3B,yBAAyB;AACzB,QAAA;YACI,UAAU,EAAE,QAAQ,CAAC,MAAM;AAC3B,YAAA,gBAAgB,EAAE,KAAK,CAAC,IAAI,KAAK,OAAO;AACxC,YAAA,gBAAgB,EAAE,KAAK,CAAC,IAAI,KAAK,OAAO;YACxC,WAAW,EAAE,KAAK,CAAC,OAAO;AAC1B,YAAA,kBAAkB,EAAE,KAAK,CAAC,OAAO,KAAK,QAAQ;YAC9C,mBAAmB,EAAE,KAAK,CAAC;AAC9B;AACJ;CACJ;AAGK,MAAO,cAAe,SAAQ,SAAS,CAAA;IACzC,IAAI,GAAG,WAAW;IAElB,KAAK,GAAG,KAAK;IAEb,OAAO,GAAG,OAAO;AALR,IAAA,OAAA,IAAA,iBAAA,CAAA,MAAA,EAAA,IAAA,2BAAA,CAAA,CAAA,OAAA,SAAA,sBAAA,CAAA,iBAAA,EAAA,EAAA,OAAA,CAAA,2BAAA,KAAA,2BAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,cAAc,yBAAd,cAAc,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA;AAAd,IAAA,OAAA,KAAA,iBAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,KAAA,EAAA,cAAc,WAAd,cAAc,CAAA,IAAA,EAAA,CAAA;;iFAAd,cAAc,EAAA,CAAA;cAD1B;;AASD;;;;;;;;AAQG;IACS;AAAZ,CAAA,UAAY,gBAAgB,EAAA;AACxB;;AAEG;AACH,IAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,aAAoB;AACxB,CAAC,EALW,gBAAgB,KAAhB,gBAAgB,GAK3B,EAAA,CAAA,CAAA;;AClHD;;;AAGG;AAgBG,MAAO,SAAU,SAAQ,aAAa,CAAA;AA4BT,IAAA,OAAA;AA3B/B;;;AAGG;AACM,IAAA,OAAO;AAChB;;;AAGG;AACqC,IAAA,KAAK;AAC7C;;;AAGG;AACa,IAAA,KAAK;AAErB,IAAA,MAAM;AAEN,IAAA,eAAe,GAAG,MAAM,CAAC,cAAc,CAAC;AAExC,IAAA,IAAI,QAAQ,GAAA;AACR,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa;QAC3C,MAAM,cAAc,GAAG,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC;AAEvD,QAAA,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK;;AAG9D,IAAA,WAAA,CAA+B,OAAgB,EAAA;AAC3C,QAAA,KAAK,EAAE;QADoB,IAAO,CAAA,OAAA,GAAP,OAAO;;IAItC,eAAe,GAAA;QACX,KAAK,CAAC,eAAe,EAAE;QACvB,IAAI,CAAC,iBAAiB,EAAE;AACxB,QAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE;;IAG3B,SAAS,GAAA;QACL,IAAI,CAAC,iBAAiB,EAAE;;IAI5B,OAAO,GAAA;QACH,IAAI,CAAC,iBAAiB,EAAE;;IAG5B,iBAAiB,GAAA;AACb,QAAA,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,MAAM,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;;mGAhDpH,SAAS,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA;6DAAT,SAAS,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,YAAA,EAAA,EAAA,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,aAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,YAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;AAAT,YAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,kCAAA,CAAA,MAAA,EAAA,EAAA,OAAA,mBAAe,CAAN,EAAA,CAAA;;;AAAT,YAAA,EAAA,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,MAAA,CAAS,4FAAI,GAAmB,CAAA,MAAA,CAAA,UAAA,EAAA,IAAI,yBAAqB,MAAO,QACzE,CADkB,CAAA,mBAAA,EAAA,GAAA,CAAA,QAAA,CAAA,CAAA,gBAAA,EAAA,GAAA,CAAA,KAAA,KAAC,OAAO,CAAR,CAAA,iBAAA,EAAA,GAAA,CAAA,KAAA,KAAC,OAAO,CAAR,CAAA,gBAAA,EAAA,GAAA,CAAA,KAAA,KAAC,OAAO,CAAR,CAAA,iBAAA,EAAA,GAAA,CAAA,KAAA,KAAC,OAAO,CAAR;wEAUE,gBAAgB,CAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAZzB,CAAC,cAAc,CAAC,CAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,CAAA;;iFAElB,SAAS,EAAA,CAAA;cAfrB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACP,gBAAA,QAAQ,EAAE,cAAc;AACxB,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,IAAI,EAAE;AACF,oBAAA,KAAK,EAAE,yBAAyB;AAChC,oBAAA,kBAAkB,EAAE,QAAQ;AAC5B,oBAAA,0BAA0B,EAAE,0EAA0E;AACtG,oBAAA,2BAA2B,EAAE,UAAU;AACvC,oBAAA,wBAAwB,EAAE,mBAAmB;AAC7C,oBAAA,yBAAyB,EAAE,mBAAmB;AAC9C,oBAAA,wBAAwB,EAAE,mBAAmB;AAC7C,oBAAA,yBAAyB,EAAE;AAC9B,iBAAA;gBACD,SAAS,EAAE,CAAC,cAAc;AAC7B,aAAA;;sBA6BgB;qBAvBJ,OAAO,EAAA,CAAA;kBAAf;YAKuC,KAAK,EAAA,CAAA;kBAA5C,KAAK;mBAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;YAKtB,KAAK,EAAA,CAAA;kBAApB,KAAK;mBAAC,OAAO;YA4Bd,OAAO,EAAA,CAAA;kBADN,YAAY;mBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;MAcxB,eAAe,CAAA;yGAAf,eAAe,GAAA,CAAA,EAAA;4DAAf,eAAe,EAAA,CAAA;;;iFAAf,eAAe,EAAA,CAAA;cAJ3B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;gBACN,OAAO,EAAE,CAAC,SAAS,CAAC;gBACpB,OAAO,EAAE,CAAC,SAAS;AACtB,aAAA;;wFACY,eAAe,EAAA,EAAA,OAAA,EAAA,CAxDf,SAAS,CAAA,EAAA,OAAA,EAAA,CAAT,SAAS,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;AC1BtB;;AAEG;;;;"}