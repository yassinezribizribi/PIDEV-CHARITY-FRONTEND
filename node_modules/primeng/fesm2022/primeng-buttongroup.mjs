import { CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { Injectable, inject, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';
import { BaseComponent } from 'primeng/basecomponent';
import { BaseStyle } from 'primeng/base';

const theme = ({ dt }) => `
.p-buttongroup .p-button {
    margin: 0;
}

.p-buttongroup .p-button:not(:last-child),
.p-buttongroup .p-button:not(:last-child):hover {
    border-right: 0 none;
}

.p-buttongroup .p-button:not(:first-of-type):not(:last-of-type) {
    border-radius: 0;
}

.p-buttongroup .p-button:first-of-type:not(:only-of-type) {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
}

.p-buttongroup .p-button:last-of-type:not(:only-of-type) {
    border-start-start-radius: 0;
    border-end-start-radius: 0;
}

.p-buttongroup .p-button:focus {
    position: relative;
    z-index: 1;
}

.p-buttongroup {
    display:flex;
}

.p-buttongroup > .p-button {
    flex: 1;
}

/* For PrimeNG */

.p-buttongroup .p-button:focus,
.p-buttongroup p-button:focus .p-button,
.p-buttonset .p-button:focus,
.p-buttonset .p-button:focus,
.p-buttonset p-button:focus .p-button,
.p-buttonset .p-button:focus {
    position: relative;
    z-index: 1;
}

.p-buttongroup .p-button:not(:last-child),
.p-buttongroup .p-button:not(:last-child):hover,
.p-buttongroup p-button:not(:last-child) .p-button,
.p-buttongroup p-button:not(:last-child) .p-button:hover,
.p-buttonset .p-button:not(:last-child),
.p-buttonset .p-button:not(:last-child):hover,
.p-buttonset p-button:not(:last-child) .p-button,
.p-buttonset p-button:not(:last-child) .p-button:hover {
    border-right: 0 none;
}

.p-buttongroup .p-button:not(:first-of-type):not(:last-of-type),
.p-buttongroup p-button:not(:first-of-type):not(:last-of-type) .p-button,
.p-buttonset .p-button:not(:first-of-type):not(:last-of-type),
.p-buttonset p-button:not(:first-of-type):not(:last-of-type) .p-button {
    border-radius: 0;
}

.p-buttongroup .p-button:first-of-type:not(:only-of-type),
.p-buttongroup p-button:first-of-type:not(:only-of-type) .p-button,
.p-buttonset .p-button:first-of-type:not(:only-of-type),
.p-buttonset p-button:first-of-type:not(:only-of-type) .p-button {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
}

.p-buttongroup .p-button:last-of-type:not(:only-of-type),
.p-buttongroup p-button:last-of-type:not(:only-of-type) .p-button,
.p-buttonset .p-button:last-of-type:not(:only-of-type),
.p-buttonset p-button:last-of-type:not(:only-of-type) .p-button {
    border-start-start-radius: 0;
    border-end-start-radius: 0;
}

p-button[iconpos='right'] spinnericon {
    order: 1;
}
`;
const classes = {
    root: 'p-buttongroup p-component'
};
class ButtonGroupStyle extends BaseStyle {
    name = 'buttongroup';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵButtonGroupStyle_BaseFactory; return function ButtonGroupStyle_Factory(__ngFactoryType__) { return (ɵButtonGroupStyle_BaseFactory || (ɵButtonGroupStyle_BaseFactory = i0.ɵɵgetInheritedFactory(ButtonGroupStyle)))(__ngFactoryType__ || ButtonGroupStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ButtonGroupStyle, factory: ButtonGroupStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(ButtonGroupStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * A set of Buttons can be displayed together using the ButtonGroup component.
 *
 * [Live Demo](https://www.primeng.org/button/)
 *
 * @module buttongroupstyle
 *
 */
var ButtonGroupClasses;
(function (ButtonGroupClasses) {
    /**
     * Class name of the root element
     */
    ButtonGroupClasses["root"] = "p-buttongroup";
})(ButtonGroupClasses || (ButtonGroupClasses = {}));

const _c0 = ["*"];
class ButtonGroup extends BaseComponent {
    _componentStyle = inject(ButtonGroupStyle);
    static ɵfac = /*@__PURE__*/ (() => { let ɵButtonGroup_BaseFactory; return function ButtonGroup_Factory(__ngFactoryType__) { return (ɵButtonGroup_BaseFactory || (ɵButtonGroup_BaseFactory = i0.ɵɵgetInheritedFactory(ButtonGroup)))(__ngFactoryType__ || ButtonGroup); }; })();
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ButtonGroup, selectors: [["p-buttonGroup"], ["p-buttongroup"], ["p-button-group"]], features: [i0.ɵɵProvidersFeature([ButtonGroupStyle]), i0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [["role", "group", 1, "p-buttongroup", "p-component"]], template: function ButtonGroup_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵelementStart(0, "span", 0);
            i0.ɵɵprojection(1);
            i0.ɵɵelementEnd();
        } }, dependencies: [CommonModule], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(ButtonGroup, [{
        type: Component,
        args: [{
                selector: 'p-buttonGroup, p-buttongroup, p-button-group',
                standalone: true,
                imports: [CommonModule],
                template: `
        <span class="p-buttongroup p-component" role="group">
            <ng-content></ng-content>
        </span>
    `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                providers: [ButtonGroupStyle]
            }]
    }], null, null); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(ButtonGroup, { className: "ButtonGroup", filePath: "buttongroup.ts", lineNumber: 19 }); })();
class ButtonGroupModule {
    static ɵfac = function ButtonGroupModule_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || ButtonGroupModule)(); };
    static ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: ButtonGroupModule });
    static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [ButtonGroup] });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(ButtonGroupModule, [{
        type: NgModule,
        args: [{
                imports: [ButtonGroup],
                exports: [ButtonGroup]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(ButtonGroupModule, { imports: [ButtonGroup], exports: [ButtonGroup] }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ButtonGroup, ButtonGroupClasses, ButtonGroupModule, ButtonGroupStyle };
//# sourceMappingURL=primeng-buttongroup.mjs.map
